name: Auto Merge

on:
  workflow_call:
    secrets:
      token:
        required: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.token || github.token }}
          script: |
              function parsePullRequestId(githubRef) {
                const result = /refs\/pull\/(\d+)\/merge/g.exec(githubRef);
                if (!result) throw new Error("Reference not found.");
                const [, pullRequestId] = result;
                return pullRequestId;
              }
              function wait(milliseconds) {
                return new Promise((resolve) => setTimeout(resolve, milliseconds));
              }
              /*const pullRequestId = parsePullRequestId(process.env.GITHUB_REF);
              console.log(pullRequestId);
              let pull = { mergable: null, number: pullRequestId };
              console.log(pull);
              while (pull.mergeable == null) {
                await wait(5000);
                pull = (await github.rest.pulls.get({ owner: context.repo.owner, repo: context.repo.repo, pull_number: pull.number })).data;
                console.log(pull);
              }
              if (pull.mergeable) {
                console.log(pull);
                await github.rest.pulls.merge({ owner: context.repo.owner, repo: context.repo.repo, pull_number: pull.number, merge_method: 'merge' });
              }*/
              console.log(process.env);
